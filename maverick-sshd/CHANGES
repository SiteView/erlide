=================
=  CHANGE LOG   =
=================

SSHD Maverick 1.4.34 - Sept 14, 2011
     
Bug Fixes
    o onChannelClose not called when connection is disconnected before remote SSH_MSG_CHANNEL_CLOSE is received.
    o TransportProtocol selectNegotiatedComponent made more tolerant of spaces in algorithm strings.
    o Uninitialised GSSAPI module causes connection error, GSSAPI must be added explicitly if you want to support it. To do this add context.supportAuthenticationMechanisms().add("gssapi-with-mic", Class.forName("com.maverick.sshd.GSSAPIWithMICAuthentication")); in your Daemon.configure method.
    o Virtual File System path canonicalization causes file not found errors with symbolic links with targets outside of valid mount paths. Use system property -Dmaverick.alternativeCanonicalize=true to enable a change in behaviour that allows these to be resolved whilst still maintaining mount security.
                
=================
=  HISTORY      =
=================

SSHD Maverick 1.4.33 - June 3, 2011
   
Features                       
    o gssapi-with-mic authentication method added.
    o Added support for MD5 signatures in RSA certificates.
    
Bug Fixes
    o SFTP subsystem attempts to send exit code after channel is closed causing NullPointerException.
    o ExecutableCommand race condition causing data to potentially be sent prior to completion of 'exec' or 'shell' SSH_MSG_CHANNEL_REQUEST_SUCCESS message.
    o Optional workaround added for JDK bug 4640544 that prevents NIO non-blocking socket from binding on windows. Set -Dmaverick.windowsIpv6Workaround=true to activate.
    o File transfers not completed at connection close do not have any failed transfer events fired. 
    o AuthenticationProvider translation of session id into string can potentially cause NativeAuthenticationProvider.logoffUser() call to be skipped due to duplicate session id strings. 
    
-----------------

SSHD Maverick 1.4.32 - February 7, 2011

Features                       
    o Added methods to load keystore from InputStream and to allow store type to be specified.
    o Added support for hmac-sha256. 
    o Added support for x509v3-sign-dss public/private keys & certificates.
    
Bug Fixes
    o SFTP subsystem formats UID/GID integer values in ls -l operation. Added methods to SftpFileAttributes so that username/group strings can be added, many clients will show these instead of the UID.GID values when listing directories.
    o x509v3-sign-rsa made compatible with older version of specification.
    o Bad SSH client can cause OOM in SFTP operation by sending large number of read requests without releasing window space for the server to return the data requested. Default behavior of SftpSubsystem has subsequently been changed to require an asynchronous operation thread to ensure that reads are not performed before window space on the client is available. It is recommended that all users keep the default behavior and remove any calls to SshContext.setAsynchronousFileOperations
    o EVENT_SFTP_DOWNLOAD_COMPLETED in some circumstances may not have been triggered.
    o NativeFileSystemProvider.closeFilesystem does not get called in some scenarios.
    
----------------

SSHD Maverick 1.4.31 - September 16, 2010

Features                       
    o Added missing hmac-md5-96 and hmac-sha1-96 HMACs to JCE provider.

Bug Fixes
    o Exception caught in SelectorThread ends operation of thread, RuntimeException is not logged and causes thread to stop without warning. All Exceptions are now consumed and logged.
    o SCP get operation fails to reset session state, causing download failures if transfer takes longer than session timeout period.
    o Session channel sends SSH_MSG_CHANNEL_CLOSE on command/session execution failure before sending SSH_MSG_CHANNEL_FAILURE causing a potential deadlock scenario with J2SSH Maverick.

-----------------

SSHD Maverick 1.4.30 - July 14, 2010

Bug Fixes
    o  Discovered race condition in transport protocol state when client sends SSH identification string and key exchange initialization packet before waiting for the server's SSH identification string.
    o  Added additional checks to ensure SFTP asynchronous operation thread is closed in a timely fashion.                      
    o  Changed window space renewal strategy to work around Ipswitch WS_FTP inability to respond to window space adjustment when window space gets lower than the maximum packet size.
            
-----------------

SSHD Maverick 1.4.29 - May 24, 2010

Features
    o  addMount method to VirtualFileSystem to allow extension on a per instance basis by overriding init method and calling addMount after super.init
    
Bug Fixes
    o  ConnectionProtocol synchronization causes deadlock under race condition when external thread closes channel.
    o  Order of channel request response and issuing of window space changed to resolve connectivity issue with Ipswitch WS-FTP client. 
    o  Option added to NativeAuthenticationProvider to throw PasswordChangeException during password change to ensure keyboard-interactive authentication does not require user to re-enter original password again.
    o  Message can now be passed through to PasswordChangeException constructor for display in keyboard-interactive authentication.
    o  Number of failed password change attempts limited to 3 for each keyboard-interactive authentication cycle.
                     
------------------

SSHD Maverick 1.4.28 - March 26, 2010

Bug Fixes
    o  Added VirtualFileSystem call to PermissionHandler.canRead in getAttributes to ensure user has 
       access to file. 
       
------------------

SSHD Maverick 1.4.27 - February 12, 2010

Bug Fixes
    o Channel close synchronization causes deadlock when another thread attempts to issue window
      space after posting data.
    o Added check to ensure no queued data exists before closing channel.
    o Added null check on session when initialization fails; NullPointerException could be thrown 
      if client disconnects prior to initialization completing. 
    o Formatted attributes sent in SFTP protocol uses 12hr instead of 24hr time format.  
    o VirtualFileSystem StackOverflowError after invalid path is received from client. 
    o Added Option for NativeFileSystemProvider to return -1 rather than throw EOFException to indicate
      end-of-file in file reads. 
    o Changed SftpSubsystem asynchronous operation thread to notify waiting threads with notifyAll
      instead of notify
    o VirtualFileSystem now attempts to force remaining writes to disk before closing file. 
    
------------------

SSHD Maverick 1.4.26 - December 30, 2009

Bug Fixes
    o Uninitialised SecureRandom instance causes slow start-up due to delayed seed generation.
    o Forwarding channel sends EOF in response to remote socket close before writing remaining 
      queued data to channel.
    o TransportProtocol synchronization causes deadlock with ConnectionProtocol when multiple
      connections attempt to communicate internally across threads.

------------------

SSHD Maverick 1.4.25 - December 9, 2009
    
Bug Fixes
    o EventServiceImplementation made thread safe.
    o HashMap use converted to ConcurrentHashMap in areas where multiple threads could
      potentially access the Map concurrently. 
    o SessionChannel.evaluateWindowSpace changed synchronization from Channel.this to 
      Channel.localWindowLock  
    o Standalone hmac-sha96 implementation broken. 

-----------------

SSHD Maverick 1.4.24 - November 16, 2009
    
Bug Fixes
    o Incorrect operator usage in standalone cryptography provider implementation of
      Diffie Hellman key exchange could generate and use algorithm values that do not
      conform to key exchange specification. 
      
-----------------

SSHD Maverick 1.4.23 - November 9, 2009
    
Bug Fixes
    o License error is logged but should be thrown from Daemon.startup.
    o SCP command can potentially leave thread running if session is closed uncleanly.
    o Virtual File System sends real path information back to client in some error messages.
    
-----------------

SSHD Maverick 1.4.22 - August 25, 2009
    
Bug Fixes
    o Server fails to send disconnect message before disconnect socket. 
    
-----------------

SSHD Maverick 1.4.21 - August 7, 2009
    
Bug Fixes
    o UNC paths as mounts do not work
    o Removed info level logging from ByteBufferPool.
    
-----------------

SSHD Maverick 1.4.20 - August 6, 2009
    
Bug Fixes
    o Added debug jar file for each version of release jar.
    o Fixed security issue with VirtualFileSystem mounts that use partial matching names.
    
-----------------
    
SSHD Maverick 1.4.19 - July 29, 2009

Features
    o   Added method to enable 'none' cipher in ServerComponentFactory. 
    o   Added AES and 3DES CTR mode ciphers to JCE cryptography provider.

-----------------

SSHD Maverick 1.4.18 - July 20, 2009

Bug Fixes
    o   Listening interface is now started when added whilst daemon is active. 
    
-----------------

SSHD Maverick 1.4.17 - July 13, 2009

Bug Fixes
    o   Transport protocol fails to process socket data remaining in buffer after 
        a request for an immediate write operation.
    o   Low socket buffer causes corrupt mac on input errors.
    
-----------------

SSHD Maverick 1.4.16 - July 2, 2009

Bug Fixes
    o   Transport protocol fails to process socket data when received length is
        less than current cipher block size.

-----------------

SSHD Maverick 1.4.15 - June 24, 2009

Bug Fixes
    o   Socket disconnects no longer logged as error.
    
-----------------

SSHD Maverick 1.4.14 - June 18, 2009

Bug Fixes
    o   Erroneous log statement removed from Channel.java
              
----------------

SSHD Maverick 1.4.13 - June 11, 2009

Bug Fixes
    o   Remote forwarding channel always sends 'hard' TCP close ('RST' flag) to 
        TCP server when 'soft' TCP close ('FIN' flag) is received from TCP client.
    o   Forwarding channel fails to send additional window space in some circumstances.
    
----------------

SSHD Maverick 1.4.12 - June 9, 2009

Features
    o Added DaemonContext method to remove an active listening interface at runtime. 
    
Bug Fixes
    o Outgoing packet counter uses incorrect value causing key exchange to be performed 
      too often.
    o Fixed keep alive logic adding new keepAliveInterval and keepAliveDataMaxLength
      properties to SshContext to allow configuration of length and timing of keep alive 
      packets.  
      
-------------------

SSHD Maverick 1.4.11 - May 8, 2009

Bug Fixes
    o Fixed issue with custom default JCE provider not implementing secure random 
      algorithm. API now defaults back to system default.
      
-------------------

SSHD Maverick 1.4.10 - April 17, 2009

Features
    o Added arcfour, arcfour128 and arcfour256 ciphers to JCE provider.

Bug Fixes
    o Channel close event fails to fire in unclean client disconnect causing 
      memory leak in IdleStateManager.
    o Write state gets out of sync with client causing connection stalls.
    o Added session identifier attribute to fired events. 
    o Forwarding channel data queue not limited causing potential memory errors 
      and performance problems

------------------

SSHD Maverick 1.4.9 - March 18, 2009

Bug Fixes
    o When preferred public key is not loaded the server still reports algorithm as supported
      to connecting clients causing connection errors when clients select the unsupported
      algorithm.
      
-----------------

SSHD Maverick 1.4.8 - February 14, 2009

Bug Fixes
    o X509 public key implementation fails signature validation due to incorrect algorithm
      name in public key blob. 
    o Race condition in ScpCommand causes potential data corruption in SCP get operations.
    
-----------------

SSHD Maverick 1.4.7 - January 7, 2009

Features
    o Added new jar files that excludes all J2SSH Maverick client code to help resolve issues
      when using both APIs on the same classpath. Just include maverick-all.jar from J2SSH in your 
      classpath and use SSHD jar file that ends in no-j2ssh.jar
    
Bug Fixes
    o Server sends SSH_MSG_UNIMPLEMENTED in response to clients SSH_MSG_UNIMPLEMENTED.
    o Required authentication set to "password" takes no account of password over keyboard-interactive.
	o Connection hangs when client guesses first key exchange packet correctly. 
	
-----------------

SSHD Maverick 1.4.6 - December 12, 2008

Features
    o Added idle connection timeout option to SshContext.
    o Support for keyboard-interactive authentication added through new 
      com.maverick.sshd.platform.KeyboardInteractiveProvider interface.
    o Event service implementation now extends interfaces in J2SSH Maverick making it possible to 
      share an event service implementation across both products.
        
Bug Fixes
    o ServerComponentManager can throw NullPointerException in cases where multiple servers
      are created at the same time in the same JVM. 
    o VirtualFileSystem fails with NoClassDef error when using JCE only jar files.
    o WS_FTP Professional ignores window space and sends data that exceeds current window.
      Workaround added to ensure minimum window space is always above packet size used by WS_FTP.
    o SFTP asynchronous operation thread causes deadlock due to incorrect synchronization
    o Writable flag in SocketConnection set outside synchronization block causing output to hang temporarily.
    o X509 not automatically supported when running JCE cryptography provider.
    
----------------------------------

SSHD Maverick 1.4.5 - October 17, 2008

Bug Fixes
    o Disconnect message does not shutdown connection immediately in key exchange.
    
------------------

SSHD Maverick 1.4.4 - October 12, 2008

Features
    o Added diffie-hellman-group-exchange-sha1 to JCE provider.  

Bug Fixes
    o Component factory test to verify key exchange is supported by JCE can return incorrect state. 
    o Server Component factory initializes CTR mode cipher with CBC mode causing disconnection errors. 
    
-----------------------------------

SSHD Maverick 1.4.3 - August 27, 2008

Bug Fixes
    o Tunnel channels pause due to threading issue.
    o JCE only environment fails with NoClassDefError on com/maverick/crypto/digest/Hash.
    o AuthenticationProvider: added null check in getHomeDirectory
    o SocketConnection: added limit check to processWriteEvent to avoid calling socketChannel.write with no data
    o VirtualFileSystem: added SecurityException try catch block, and null check for the com.maverick.sshd.vfs.VFSRoot system property in init().
    o Fixed logging ClassCastException when parameter not a string
    
------------------

SSHD Maverick 1.4.2 - July 23, 2008

Features
    o ServerComponentManager: init() no longer overrides the createInstance() methods of each of the factories
    o SshContext: constructor no longer overrides createInstance when creating the compression factories.
    o TransportProtocol: moved the if(!name.equals(COMPRESSION_NONE)) from the SshContext constructor to the sendKeyExchangeInit() method so that the condition is checked once instead of twice. 
    o ServerComponentManager: added static setPerContextAlgorithmPreferences() and getPerContextAlgorithmPreferences methods.
    o SshContext: now supports per instance algorithm preferences.
    
Bug Fixes
    o Added correct examples
    
-----------------

SSHD Maverick 1.4.1 - July 09, 2008

Features
	o DaemonContext: added setProduct method that allows the a product name to be set that is used to prefix thread names, the default for this is now "SSHD-"
	o Daemon: now prefixes thread names with the product name set in the DaemonContext
	o DaemonContext: Changed addEventListener and removeEventListener methods to take a String threadPrefix parameter that allows listeners to be registered that will only listen to threads who's name starts with this string. 
	o DiffieHellmanGroups: new class to store the safe primes for DH key exchanges.
	o DiffieHellmanGroup14Sha1: Added now that there is better code safety to prevent seemingly random errors when JCE'S are used that do not support it.
	o DiffieHellmanGroup1Sha1JCE, DiffieHellmanGroup14Sha1JCE, DiffieHellmanGroup14Sha1Server and DiffieHellmanGroup1Sha1Server: have been tweaked to improve performance.
	o DiffieHellmanGroupExchangeSha1Server: added this key exchange algorithm to the standalone provider
	o JCEServerComponentManager: now tests each of the keyexchange algorithms before adding them to the list of supported algorithms, if the jce does not support the algorithm or the keysize it will not be added.
	o TransportProtocol: moved warning that the authentication provider is not set from onSocketClose to SshContext.init(). 
	o ServerComponentManager: changed to catch SecurityException on call to System.getProperty().
	o SocketConnection: added getPort() method.
	o SshContext: added GenerateKeyFiles() method.
	o StandaloneServerComponentManager: Added aes128-ctr, aes192-ctr, aes256-ctr ciphers.
	o SshContext: added setForwardingCallback() and getForwardingCallback() methods.
	o Cleaned up the DH key exchanges and moved the primes to a new com.maverick.components.DiffieHellmanGroups class.
	
Bug Fixes
	o Channel: isRemoteEOF is now set when the remote end of the tunnel goes EOF
	o ConnectionProtocol: fixed bug in workaround in stop() for clients that send disconnect before channelclose, that caused the state of the channel to not be set to closed
	o ConnectionProtocol: removed empty private jbInit() method and the call to it in the constructor.
	o ConnectionProtocol: added calls to ConnectionManager to register and unregister connections.
	o ConnectionManager: added back in, as was missed out of 1.4.0 release.
	o ConnectionManager: getConnection(byte[] sessionid) and getTransport(byte[] sessionid) now check if the provided sessionid is registerd, and return null if it isn't instead of throwing a NullPointerException.
	o DaemonContext and Daemon: now support IPV6.
	o DaemonContext: removed useless getProtocolContext() method.
	o Jars: Fixed problem with manifests that prevented them from being verified once signed using "jarsigner".
	o LocalForwardingChannel: removed unused idle() method.
	o PasswordAuthentication: removed unreachable catch block from the init() method.  
	o PublicKeyAuthentication: removed unreachable catch block from the init() method. 
	o RemoteForwardingChannel: optimized createChannel() method.
	o RemoteForwardingChannel: fixed a bug where connections to the start of a remote forwarding tunnel that were rejected by the end of the tunnel were not closed. 
	o Selector Thread: closeAllChannels(), fixed to call correct close methods to prevent memory leaks when server is shutdown whilst there are connections still active.
	o SftpSubsystem: onSubsystemFree(), fixed to close the NFS to prevent memory leaks when server is shutdown whilst there are connections still active.
	o SocketForwardingChannel: synchronized accesses to queue.
	o SocketForwardingChannel: fixed registrationCompleted() so that all messages received during registration are processed rather than just the first.
	o SocketForwardingChannel: fixed java.lang.ClassCastException: java.nio.HeapByteBuffer caused by incorrect cast when high activity causes data to be sent before registration is completed.
	o SshContext: fixed loadKeystore() method so that exceptions caused by unsupported algorithms are thrown not swallowed.
	o SshContext: removed unused private loadReflectionCipher() method.
	o TransportProtocol: removed unused i variable in negotiateProtocol.
	o TransportProtocol: removed unused method and field - getLastError() and lastError.
	o TransportProtocol: added getRemotePort(), getLocalAddress(), getLocalPort() methods.
	o VirtualFileSystem: removed unused package-private startsWithIgnoreCase() method.
	o VFSMount: class was package-private, but methods were public, changed methods to be package-private
	o Updated copyright headers
	o Cleaned code style.

-----------------

SSHD Maverick 1.4.0 - May 16, 2008

Features
	o  DaemonContext: Added addEventListener() and removeEventListener() methods for use with the new logging event model.
	o  DaemonContext: getListeningInterfaces() now returns all the bound interfaces rather than all the interfaces that Daemon tried to bind to.  
	o  Daemon: changed so that getLicense and getVersion methods appear in source to allow testing
	o  ProtocolEngine: Added disconnect() method.
	o  RemoteForwardingFactoryImpl: changed bindInterface() so that the backlog of the socket created is acquired from the 
	    com.maverick.sshd.SshContext.getMaximumSocketsBacklogPerRemotelyForwardedConnection() method.
	o  SelectorThread.closeAllChannels: Now disconnects the protocol engine.
	o  SshContext: new init() method added that sets the daemon instance, and new zero argument constructor added so that an SshContext instance can be created and configured before attaching a daemon to it.
	o  SshContext: added setRequiredAuthenticationMethods convenience method to set the authentication methods required by the server, options are PUBLIC_KEY, PASSWORD, PUBLIC_KEYandPASSWORD, ANY:
	o  SshContext: added getMaximumSocketsBacklogPerRemotelyForwardedConnection() and setMaximumSocketsBacklogPerRemotelyForwardedConnection() methods 
	    to com.maverick.sshd.SshContext.
	o  VirtualFileSystem: added closeFile(byte[] handle,boolean remove) method to com.maverick.sshd.vfs.VirtualFileSystem.java that allows a file to be closed but not removed from the list of open files, and changed closeFilesystem so that it closes files but does not remove them, to allow custom code to perform actions on closed files such as transfer them to a different location.
	o  multiple protocols can now be added to the server instead of being fixed to SSHD.
	o  DaemonContext and SshContext: have replaced ConfigurationContext
	o  Daemon: replaces SshDaemon
	o  SocketForwardingChannel: This now extends ForwardingChannel, most of ForwardingChannel's functionality is now in SocketForwardingChannel
	o  Extraction of Java NIO framework from the com.maverick.sshd package and a new generic NIO framework package created in com.maverick.nio.
	o  ProtocolEngine: replaces TransportProtocol
	o  ProtocolContext: replaces SshContext
	o  SocketConnection: added getPort method
	
Bug Fixes
	o  CustomForwardingManager: Memory leak fixed in com.maverick.sshd.custom.CustomForwardingManager.unregisterConnection 
	    where localForwardingManagers hashmap was not being cleaned up
	o  Daemon: Fixed cleanup bug where remote forwards were not cleaned up when shutdown() was called by Creating com.maverick.nio.ForwardingManager.java 
	    by abstracting com.maverick.sshd.RemoteForwardingManager and changing it to extend com.maverick.nio.ForwardingManager.java.  
	    com.maverick.nio.ForwardingManager.java now manages forwarding, has the getInstance method, and has a clearinstances() method 
	    which removes any registered forwardingmanagers.
	o  DaemonContext: getListeningInterfaces() now returns all the bound interfaces rather than all the interfaces that Daemon tried to bind to.  
	o  RemoteForwardingManager: Memory leak fixed in com.maverick.sshd.RemoteForwardingManager.unregisterConnection 
	    where remoteForwardingFactories hashmap was not being cleaned up
	o  SocketForwardingChannel: com.maverick.sshd.SocketForwardingChannel.processWriteEvent now checks if key==null 
	    to prevent NullPointerExceptions when processWriteEvent() is called after shutdownSocket() has been called.

-----------------

SSHD Maverick 1.3.4 - May 15, 2008
	
Features
	o  AbstractComponentFactory: Recoded  so that algorithm lists can be fully ordered, there is now a new changePositionofAlgorithm  method which facilitates this. 	
	o  ConfigurationContext: Added addEventListener and removeEventListener methods for use with the new logging event model.
	o  ConfigurationContext: Changed setAuthenticationProvider to accept an instance of AuthenticationProvider rather than an AuthenticationProvider class
	o  ConnectionProtocol: Added workaround to the stop() method for clients that send disconnect before channelclose to ensure that channels are cleaned.
	o  ServerComponentManager: Recoded ServerComponentManager,SshContext so that ciphers and macs can have independent preferences for Server->Client and Client->Server communications.
	o  ServerComponentManager: com.maverick.sshd.components.ServerComponentManager.java now tries JCE first if the com.maverick.sshd.components.ServerComponentManager.tryStandaloneCryptographyBeforeJCE is set to false otherwise Standalone is tried first, this allows the choice to use JCE or Standalone cryptography to be made programatically instead of by changing the classpath or creating a class loader.
	o  SessionChannel: added setMaxWindowSpace(int minSizeMultiple) method which allows the MAX_WINDOW_SPACE to be set to a multiple of MIN_WINDOW_SPACE.
	o  SshDaemon: added new method  com.maverick.sshd.SshDaemon.loadOrGenerateHostKey(File, String, int, ConfigurationContext, int, int, String) that allows the servers host key to be passphrase protected
	o  VirtualFileSystem: now logs an error if the vfs root path is not a directory or does not exist
	o  Added AES192CBC and AES256CBC ciphers.
	o  Removed DiffieHellmanGroup14Sha1 until better code safety can be added when JCES are used that do not support it.
	o  All logging has been changed to use an event model.  Important events have their own event codes, 
		less important events are wrapped using EventLog and use the "log event" code or the "debug" event code.
	o  TransportProtocol: Added getLocalPort, getLocalAddress and getPort methods.
	
Bug Fixes
	o  Channel: removed parameter from Channel.evaluateWindowSpace as it was not used in SessionChannel.
	o  ForwardingChannel: replaced evaluateWindowSpace's argument with localwindowWithPending to match SessionChannel.
	o  ForwardingChannel: fixed synchronization issue by synchronizing accesses to "queue".
	o  ForwardingChannel: fixed deadlocking issue in the setInterestedOps() method.
	o  SessionChannel: removed parameter from SessionChannel.evaluateWindowSpace as it was not used.
	o  TransportProtocol: internalDisconnect() now sets the socketChannel to null 
	o  Fixed the word occurred which was misspelt as occured.

-----------------

SSHD Maverick 1.3.3 - September 19, 2007

Features
	o  AuthenticationProvider: Added logon method that takes the clients public key as a parameter
	o  AuthenticationProviderChanged logon(byte[], String, SocketAddress, SshPublicKey) to 
		logon(byte[], String, SocketAddress, SshPublicKey, boolean).  
		If the new parameter is true then if provider.logonUser returns true, the pendingUser is not added to the list of current users.
	o  AuthenticationProvider: Added getAuthenticationStatus() method to  
	    to allow authentications to set an SshAuthenticationStatus variable when a simple boolean successful is inadequate.
	o  ConfigurationContext: Added setFileSystemProvider_KeyStore() method to allow the NFS for the KeyStore to be different from that passed to setFileSystemProvider().
	o  NativeAuthenticationProvider: Changed logonUser(byte[], String, SocketAddress, SshPublicKey) to 
		logonUser(byte[], String, SocketAddress, SshPublicKey, boolean).  
		The new parameter indicates whether the client is checking whether their key is acceptable 
		or they are attempting to logon.
	o  NativeAuthenticationProvider: Added getAuthenticationStatus() method to allow authentications 
	    to set an SshAuthenticationStatus variable when a simple boolean succesful is inadequate.

Bug Fixes
	o  TransportProtocol.internalDisconnect() now doesn't fail if the AuthenticationProvider is not set.
	o  AuthenticationProvider.getHomeDirectory() now throws an IOException if the users home directory does not exist.
	o  Changed com.maverick.ssh.components.AbstractComponentFactory.createDelimitedList(String preferred, Enumeration names) 
	    so that if the preferred component is not contained within the enumeration, it is not prepended to the list.

-----------------
SSHD Maverick 1.3.2 - August 13, 2007
Features
     o  Changed com.maverick.sshd.vfs.VirtualFileSystem: slight code optimisations

Bug Fixes
	 o	Changed com.maverick.nio.DaemonContext.setPermanentConnectThreads() so that it uses the permanentthreads parameter rather than the transferthreads paramater
	 o	Changed com.maverick.sshd.ConnectionProtocol.processChannelClose, ConnectionProtocol.processChannelOpenConfirmation ConnectionProtocol.processChannelOpenFailure to synchronized 
	    to fix a synchronization issue.
     o  Changed com.maverick.sshd.vfs.VirtualFileSystem.makedirectory to be consistent in the path type it sends to permissionhandle.canwrite
     o  Changed com.maverick.sshd.vfs.VirtualFileSystem: fixed removeFile() so that it calls canWrite() to check permissions before deleting.

-----------------
SSHD Maverick 1.3.1 - May 8, 2007

Bug Fixes
     o  CancelledKeyException can cause transfer thread to exit, causing hanging state
        for connected clients.

IMPORTANT NOTICE: 

This version of Maverick SSHD may not be compatible with source code developed using previous 
versions of the API. Changes have been required to some package structures to enable the 
cryptographic provider to be completely seperated from the API. These changes now allow us
to provide seperate implementations of the API for the internal cryptographic provider and 
the Java Cryptography Extensions provider. 

SSHD Maverick 1.3.0 - February 12, 2007

Features
    o  API can now be used exclusivley with the Java Runtime JCE provider, or alternativley
       the internal provider. Simply select the maverick-sshd-jce-only.jar file if you want to use
       the JCE exclusivley, or maverick-sshd-standalone-only.jar if you want to use the internal
       provider. The maverick-sshd.jar contains all implementations and will default to the
       internal provider. 

Bug Fixes

	o  AuthorizedKeysStoreImpl.java now passes the attributes of the authorizedKeysFile to nfs.openFile() instead of passing an empty set of attributes.

-----------------

SSHD Maverick 1.2.14 - November 28, 2006

Features
    o  SshDaemon startup method additional option to shutdown if any interface fails to bind. 
    o  Added option to clear a ConfigurationContext component factory.
    o  Added additional loadOrGenerateHostKey method that allows key format to be set. 
    
Bug Fixes
    o  VFSPermissonHandler interface does not provide getPermissions method with username parameter
    o  Shutdown method throws NullPointerException if server is not started correctly.
    o  Shutdown method ensures all threads are exited before returning.

-----------------
SSHD Maverick 1.2.13 - September 18, 2006

Features
    o  Added methods to SshDaemon to return the version and release date of the product.
    o  Support for x509v3-sign-rsa and x509v3-sign-rsa-sha1 certificates

Bug Fixes
    o  Added getter/setter method to ConfigurationContext to allow "Too many connections" text to 
       be changed.
    o  Added PermissionDeniedException to getFileAttributes methods.
    o  Non ascii characters in folder name causes "The handle is invalid" error.
    o  Canonicalization of paths may cause double // in path in log files.
    o  File system last modified date is out of bounds on rare occasions causing
       fatal errors when listing folders which contain these files. Check added to 
       prevent fatal error.

-----------------

SSHD Maverick 1.2.12 - August 8, 2006

Features
    o  Added diffie-hellman-group14-sha1 key exchange as per SSH Transport Protocol specification. This 
       implementation exists in both the internal crypto provider and JCE formats although it should be
       noted that the default SUN reference JCE provider does not support 2048 bit primes required by
       this key exchange method. The BouncyCastle JCE provider (www.bouncycastle.org) does and has been
       used to test this algorithm works with JCE enabled.

Bug Fixes
    o  Added system property "filezilla.bug.workaround" to help workaround an issue with Filezilla
       SFTP client 2.2.11. This version fails to respond to SSH_MSG_WINDOW_ADJUST after SFTP channel 
       is opened
    o  Reordered SelectorThreadPool creation to avoid accept threads accepting clients before transfer
       pool is initialized.
    o  ConcurrentModificationException thrown during shutdown if client attempts to connect. 

-----------------

SSHD Maverick 1.2.11 - July 22, 2006

Features
    o  Additional option to allow KEX for denied connections. This helps the client recieve a correct
       disconnection message rather than connection termination.
    o  New ConnectionManager singleton class added to provide lookup of TransportProtocol and ConnectionProtocol
       objects based upon the sessionid.

Bug Fixes
    o  Server passes all SSHredder vulnerability checks (http://www.rapid7.com/info/sshredder.html)
    o  Solaris 9 OP_CONNECT is never selected for loopback address.
    o  addListeningInterface fails to accept IPV6 address.
    o  SelectorThread fails to remove itself from the thread pool when thread exits.

-----------------

SSHD Maverick 1.2.10 - June 8, 2006

Features
    o  Maximum number of concurrent connections setting added to ConfigurationContext.
    o  Framework changes to allow LocalForwardingChannel and RemoteForwardingChannel to be overidden.

Bug Fixes
    o  Client hangs after access manager refuses to allow connection.
    o  Disconnection of clients in rare circumstances could cause session leaking.
    o  JCE ciphers returning null for zero length transformation causes connection failure.
    o  Added support for UTF-8 licenses.

-----------------

SSHD Maverick 1.2.9 - February 8, 2006

Features
    o  Added 'none' authentication mechanism which allows customization of the authentication banner
       message on a per-user basis.

Bug Fixes
    o  VFS permissions handler incorrect behaviour for removeDirectory
    o  Installed command is not executed when no AccessManager is available
    o  ServerSocketChannel can return null SocketChannel in call to accept
    o  When the server is shutdown and restarted old instances of the AuthenticationProvider are 
       being retained.

-----------------

SSHD Maverick 1.2.8 - July 22, 2005

Bug Fixes
    o  SSH key fingerprint uses incorrect algorithm.
    o  Transport protocol fails with large number of padding bytes

----------------
SSHD Maverick 1.2.7 - June 24, 2005

Features
    o  ConfigurationContext options to set socket option SO_REUSEADDR

Bug Fixes
    o  SCP filename pattern matching implementation changed to solve some compatibility issues.
    o  Public key authentication was ignoring the boolean value returned from NativeAuthenticationProvider logon.

-----------------

SSHD Maverick 1.2.6 - June 1, 2005

Features
    o  Configuration item added to allow a limit to be placed on the number of public key verification
       attempts made by a client. 

Bug Fixes
    o  SCP now handles escaped spaces in filenames, for example "foobar\ barfoo"
    o  Server shutdown failed to close selector correctly resulting in socket maintaining a listening state.
    o  Shutdown fails to free channels and call associated cleanup methods.
    o  Some servers suffer from big difference in Inbound vs Outbound performance.

-----------------

SSHD Maverick 1.2.5 - May 4, 2005

Bug Fixes
    o  Files transfered over SCP become corrupted
    o  AuthenticationProvider getHomeDirectory called with null username value.

-----------------

SSHD Maverick 1.2.4 - April 22, 2005

Features
    o  Configuration items for setting SO_KEEPALIVE and TCP_NODELAY on connected sockets.
    o  Option to override the default SFTP character set.
    o  PublicKeyStore interface added to allow customization of the public key authentication mechanism.
    o  NativeFileSystemProvider closeFilesystem method added and initialization contract changed.
    o  Further optimization to ensure faster throughput of data
    o  Server options to force key exchange after n packets or n bytes of data

Bug Fixes
    o  SCP directory uploading creates unexpected path structure.
    o  SFTP character set incorrectly defaulted to UTF-8.
    o  NativeFileSystemProvider readDirectory EOFException causes SCP error.
    o  SCP fails to upload directory
    o  Public key authentication fails to validate public key algorithm causing OutOfMemoryError
    o  SFTP does not read as many bytes from file as the client requests.

-----------------

SSHD Maverick 1.2.3 - February 24, 2005

Bug Fixes
    o  Server fails to respond to SFTP extension messages.

-----------------
SSHD Maverick 1.2.2 - January 28, 2005

Features
    o  Added onChannelClosing event to ChannelEventListener/ChannelEventAdapter

Bug Fixes
    o  Compression failure when using OpenSSH scp client
    o  Session timeout fails with ConcurrentModificationException
    o  Added exit code to SftpSubsystem client
    o  Fixed null username being passed into getHomeDirectory
    o  Termination of scp/sftp transfer was not disconnecting correctly if socket terminates in processWriteEvent
    o  SCP buffer overflow causes disconnection

-----------------

SSHD Maverick 1.2.1 - January 13, 2005

Bug Fixes
    o  AuthenticationProvider getRemoteAddress method fails to return address
    o  Uploading of files over SCP with compression causes client failure
    o  SCP thread fails to exit when a channel error occurs
    o  NPE when SCP attempts to close a channel thats already closed
    o  onChannelClosing is called after state is set to close
    o  Disconnecting of transport logs off user before closing all channels
    o  SCP client interrupt fails to free channel correctly

-----------------

SSHD Maverick 1.2.0 - January 11, 2005

Features
    o  Option to use external JCE - you can now optionally use an external JCE provider 
       for the following algorithms Blowfish, DESede, MD5, SHA1, SHA1withRSA, SHA1withDSA,
       RSA, DSA and DH (Diffie Hellman).
    o  startup method added to SshDaemon and constructor behaviour changed to require 
       added method to be called to start the service.
    o  NativeAuthenticationProvider interface updated to provide session id with all 
       method calls.
    o  Cleaned up session channel onChannel* event methods and removed final statements
       to allow implementations greater flexibility - always call the super method if 
       you override.
    o  AccessManager refactored to include several more security checks and to provide
       additional parameters for greater control.
    o  Option in ConfigurationContext to force all active remote forwarding tunnels to 
       close when a user cancels a remote forwarding listener.
    o  Option to buffer channel data and associated methods to block external threads
       attempting when they attempt to add more data than is available in the buffer
    o  Session timeout option
    o  Remote ip address now passed into NativeAuthenticationProvider

Bug Fixes
    o  SCP race condition causes file corruption
    o  Password authentication password change fails
    o  Public key authentication throws OutofMemoryError
    o  Port forwarding channels fail to send queued data when channel closes
    o  Forwarding channel data received before selector thread registration causes NPE
    o  When client disconnects the server is still bound to remote forwarding addresses
    o  Failed connection state causes logoffUser to be called with NULL session id
    o  Race condition in RemoteForwardingChannel causes Socket to remain open
    o  Removal of remote forwarding listeners throws modification exception
    o  Closing of port forwarding channel causes deadlock of the connection 
    o  SCP thread doesnt exit after file upload
    o  Failed socket bind causes server to shutdown even if other lstening interfaces are active

-----------------

SSHD Maverick 1.1.2 - October 14, 2004

Features
    o  Added getConnection method to Channel to return the associated ConnectionProtocol
       instance.
    o  NativeFileSystemProvider init method changed to take SessionChannel rather than 
       the sessionid. This provides access to session level properties such as sessionid
       and via the ConnectionProtocol the ip of the connected host.


Bug Fixes
    o  readFile reads more data than the client has requested. Changed the interface to 
       include the number bytes required by the client.

-----------------

SSHD Maverick 1.1.1 - October 14, 2004

Features
    o  Added methods to TransportProtocol and ConnectionProtocol to return the local
       address in use for an individual connection

Bug Fixes
    o  OutOfMemoryError thrown with large files 2GB+ when using SCP. Deprecated existing 
       NativeFileSystemProvider method readFile and replaced with readFile method that
       takes a buffer to avoid excessive allocation of memory.

-----------------

SSHD Maverick 1.1.0 - September 14, 2004

Features
    o  Software/Version/Comments field of the SSH identification string can now be modified to 
       show implementation specific information
    o  Each instance of SshDaemon can now listen on multiple interfaces for connections
    o  loadOrGenerateHostKey utility method added to SshDaemon
    o  Configure an ExecutableCommand as the default session

Bug Fixes
    o  Forwarding channels made thread safe
    o  SessionChannel hangs on failed command
    o  RSA host key signature fails when key is loaded from file

-----------------

SSHD Maverick 1.1.0 Beta 2 - August 8, 2004

Features
    o  ExecutableCommand abstract class added to provide support for individual command execution
    o  SCP support added as an implementation of ExecutableCommand
    o  LogoffUser method added to NativeAuthenticationProvider

-----------------

SSHD Maverick 1.1.0 Beta - July 26, 2004

Features
    o  Rewritten socket selector to only register OP_WRITE as an when needed. This provides better
       performance and removes the high CPU usage problem and removes a the third party dependency.
    o  Rewritten threading model to better distribute the load between available threads. An additional
       option is now provided to enable the maximum number of selectors per thread to be set. 
    o  Thread settings can now be set using the ConfigurationContext.

-----------------

SSHD Maverick 1.0.3 - July 20, 2004

Bug Fixes
    o  Shutdown method not available in SshDaemon causing possible net bind errors. A Runtime hook
       has been added to call this method when the VM exits but it is recommended that implementations
       provide a more reliable method of calling the method when the server requires to be shutdown.

-----------------

SSHD Maverick 1.0.2 - July 18, 2004

Bug Fixes
    o  Incorrect state caused identification string to be sent as a binary packet 
       (this caused client to hang or disconnect in error)
    o  SSH_FXP_REAL_PATH message changed to send absolute path in both filename and longname fields
       (this is not exactly how version 3 of the protocol describes but other client and 
       servers have adopted this method and therefore our implementation could cause a problem)
    o  SSH_FXP_STATUS message failed to include language field

-----------------

SSHD Maverick 1.0.1 - July 01, 2004

Features
    o  Source code distribution updated to contain dependent source files from J2SSH Maverick API

-----------------

SSHD Maverick 1.0.0 - June 18, 2004

Features
    o  Updated Javadocs with detailed information

-----------------

SSHD Maverick 0.1.3 - May 18, 2004

Features
    o  AccessManager interface added to control access to individual features by user

Bug Fixes
    o  Synchronous file operation thread failed to release object references for garbage 
       collection

-----------------

SSHD Maverick 0.1.2 - May 7, 2004

Features
    o  NativeProcessProvider removed from design in favor of abstract SessionChannel 
       which allows direct access to the session when creating native implementations.
    o  Added Channel extended data support
    o  NativeFileSystemProvider can now be configured to use asynchronous or synchronous 
       file operations

Bug Fixes
    o  ForwardingChannel could potentially fail to send channel data to SocketChannel
       if write operation did not write all available bytes
    o  Channel allocated too many ByteBuffer's causing OutOfMemoryError
    o  SFTP subsystem asynchronous thread failed to stop on session exit

-----------------

SSHD Maverick 0.1.1 - Apr 13, 2004

Features
    o  Public key authentication
    o  Maximum number of failed authentications property added to ConfigurationContext

Bug Fixes
    o  ProcessBinaryPackets can now handle multiple messages in a single read operation 
       correctly.
    o  SocketChannel fails to write complete packet causing protocol deadlock
    o  SFTP now uses NativeFileSystemProvider asynchrounously

-----------------

SSHD Maverick 0.1.0 - Feb 12, 2004

Features
    o  Supports SSH2 protocol
    o  Scalable implementation based upon the Java NIO framework
    o  Configurable number of data transfer, accept and connect threads
    o  Local/Remote port forwarding
    o  Password authentication
    o  Blowfish/3DES Encryption
    o  SHA1/MD5 Message Authentication
    o  ZLIB Compression
    o  NativeAuthenticationProvider interface allows customization of the login process
    o  NativeProcessProvider interface allows customization of process execution
    o  Supports SFTP
    o  Optional NativeFileSystemProvider interface to customize file access
    o  Built in VirtualFileSystem provides platform independent NativeFileSystemProvider 
       implementation
    o  VirtualFileSystem allows mounts to be defined by mapping virtual directories to 
       physical folders
