%%------------------------------------------------------------
%%
%% Implementation stub file
%% 
%% Target: oe_managedElement
%% Source: d:/corba/idl/managedElement.idl
%% IC vsn: 4.2.25
%% 
%% This file is automatically generated. DO NOT EDIT IT.
%%
%%------------------------------------------------------------

-module(oe_managedElement).
-ic_compiled("4_2_25").


-include_lib("orber/include/ifr_types.hrl").

%% Interface functions

-export([oe_register/0, oe_unregister/0, oe_get_module/5]).
-export([oe_dependency/0]).



oe_register() ->
    OE_IFR = orber_ifr:find_repository(),

    register_tests(OE_IFR),

    _OE_1 = oe_get_top_module(OE_IFR, "IDL:mtnm.tmforum.org/managedElement:1.0", "managedElement", "1.0"),

    orber_ifr:'ModuleDef_create_enum'(_OE_1, "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0", "CommunicationState_T", "1.0", ["CS_AVAILABLE","CS_UNAVAILABLE"]),

    orber_ifr:'ModuleDef_create_struct'(_OE_1, "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0", "ManagedElement_T", "1.0", [#structmember{name="name", type={tk_sequence,
                                 {tk_struct,
                                  "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                  "NameAndStringValue_T",
                                  [{"name",{tk_string,0}},
                                   {"value",{tk_string,0}}]},
                                 0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                "NameAndStringValue_T",
                                                [{"name",{tk_string,0}},
                                                 {"value",{tk_string,0}}]},
                                               0})}, #structmember{name="userLabel", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="nativeEMSName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="owner", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="location", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="version", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="productName", type={tk_string,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_string,0})}, #structmember{name="communicationState", type={tk_enum,
                                               "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0",
                                               "CommunicationState_T",
                                               ["CS_AVAILABLE",
                                                "CS_UNAVAILABLE"]}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_enum,
                                               "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0",
                                               "CommunicationState_T",
                                               ["CS_AVAILABLE",
                                                "CS_UNAVAILABLE"]})}, #structmember{name="emsInSyncState", type=tk_boolean, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean)}, #structmember{name="supportedRates", type={tk_sequence,tk_short,0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,tk_short,0})}, #structmember{name="additionalInfo", type={tk_sequence,
                                           {tk_struct,
                                            "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                            "NameAndStringValue_T",
                                            [{"name",{tk_string,0}},
                                             {"value",{tk_string,0}}]},
                                           0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                "NameAndStringValue_T",
                                                [{"name",{tk_string,0}},
                                                 {"value",{tk_string,0}}]},
                                               0})}]),

    orber_ifr:'ModuleDef_create_alias'(_OE_1, "IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0", "ManagedElementList_T", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0",
                                                "ManagedElement_T",
                                                [{"name",
                                                  {tk_sequence,
                                                   {tk_struct,
                                                    "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                    "NameAndStringValue_T",
                                                    [{"name",{tk_string,0}},
                                                     {"value",{tk_string,0}}]},
                                                   0}},
                                                 {"userLabel",{tk_string,0}},
                                                 {"nativeEMSName",
                                                  {tk_string,0}},
                                                 {"owner",{tk_string,0}},
                                                 {"location",{tk_string,0}},
                                                 {"version",{tk_string,0}},
                                                 {"productName",{tk_string,0}},
                                                 {"communicationState",
                                                  {tk_enum,
                                                   "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0",
                                                   "CommunicationState_T",
                                                   ["CS_AVAILABLE",
                                                    "CS_UNAVAILABLE"]}},
                                                 {"emsInSyncState",tk_boolean},
                                                 {"supportedRates",
                                                  {tk_sequence,tk_short,0}},
                                                 {"additionalInfo",
                                                  {tk_sequence,
                                                   {tk_struct,
                                                    "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                    "NameAndStringValue_T",
                                                    [{"name",{tk_string,0}},
                                                     {"value",{tk_string,0}}]},
                                                   0}}]},
                                               0})),

    _OE_2 = orber_ifr:'ModuleDef_create_interface'(_OE_1, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0", "ManagedElementIterator_I", "1.0", []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I/next_n:1.0", "next_n", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_boolean), 'OP_NORMAL', [#parameterdescription{name="meList", type={tk_sequence,
                                           {tk_struct,
                                            "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0",
                                            "ManagedElement_T",
                                            [{"name",
                                              {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                "NameAndStringValue_T",
                                                [{"name",{tk_string,0}},
                                                 {"value",{tk_string,0}}]},
                                               0}},
                                             {"userLabel",{tk_string,0}},
                                             {"nativeEMSName",{tk_string,0}},
                                             {"owner",{tk_string,0}},
                                             {"location",{tk_string,0}},
                                             {"version",{tk_string,0}},
                                             {"productName",{tk_string,0}},
                                             {"communicationState",
                                              {tk_enum,
                                               "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0",
                                               "CommunicationState_T",
                                               ["CS_AVAILABLE",
                                                "CS_UNAVAILABLE"]}},
                                             {"emsInSyncState",tk_boolean},
                                             {"supportedRates",
                                              {tk_sequence,tk_short,0}},
                                             {"additionalInfo",
                                              {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                "NameAndStringValue_T",
                                                [{"name",{tk_string,0}},
                                                 {"value",{tk_string,0}}]},
                                               0}}]},
                                           0}, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, {tk_sequence,
                                               {tk_struct,
                                                "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0",
                                                "ManagedElement_T",
                                                [{"name",
                                                  {tk_sequence,
                                                   {tk_struct,
                                                    "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                    "NameAndStringValue_T",
                                                    [{"name",{tk_string,0}},
                                                     {"value",{tk_string,0}}]},
                                                   0}},
                                                 {"userLabel",{tk_string,0}},
                                                 {"nativeEMSName",
                                                  {tk_string,0}},
                                                 {"owner",{tk_string,0}},
                                                 {"location",{tk_string,0}},
                                                 {"version",{tk_string,0}},
                                                 {"productName",{tk_string,0}},
                                                 {"communicationState",
                                                  {tk_enum,
                                                   "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0",
                                                   "CommunicationState_T",
                                                   ["CS_AVAILABLE",
                                                    "CS_UNAVAILABLE"]}},
                                                 {"emsInSyncState",tk_boolean},
                                                 {"supportedRates",
                                                  {tk_sequence,tk_short,0}},
                                                 {"additionalInfo",
                                                  {tk_sequence,
                                                   {tk_struct,
                                                    "IDL:mtnm.tmforum.org/globaldefs/NameAndStringValue_T:1.0",
                                                    "NameAndStringValue_T",
                                                    [{"name",{tk_string,0}},
                                                     {"value",{tk_string,0}}]},
                                                   0}}]},
                                               0}), mode='PARAM_OUT'}
, #parameterdescription{name="how_many", type=tk_ulong, type_def=orber_ifr:'Repository_create_idltype'(OE_IFR, tk_ulong), mode='PARAM_IN'}
], [orber_ifr:lookup_id(OE_IFR,"IDL:mtnm.tmforum.org/globaldefs/ProcessingFailureException:1.0")], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I/getLength:1.0", "getLength", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_ulong), 'OP_NORMAL', [], [orber_ifr:lookup_id(OE_IFR,"IDL:mtnm.tmforum.org/globaldefs/ProcessingFailureException:1.0")], []),

    orber_ifr:'InterfaceDef_create_operation'(_OE_2, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I/destroy:1.0", "destroy", "1.0", orber_ifr:'Repository_create_idltype'(OE_IFR, tk_void), 'OP_NORMAL', [], [orber_ifr:lookup_id(OE_IFR,"IDL:mtnm.tmforum.org/globaldefs/ProcessingFailureException:1.0")], []),

    ok.


%% General IFR registration checks.
register_tests(OE_IFR)->
  re_register_test(OE_IFR),
  include_reg_test(OE_IFR).


%% IFR type Re-registration checks.
re_register_test(OE_IFR)->
  case orber_ifr:'Repository_lookup_id'(OE_IFR,"IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0") of
    []  ->
      true;
    _ ->
      exit({allready_registered,"IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0"})
 end.


%% IFR registration checks for included idl files.
include_reg_test(OE_IFR) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR,"IDL:mtnm.tmforum.org/globaldefs:1.0") of
    [] ->
      exit({unregistered,"IDL:mtnm.tmforum.org/globaldefs:1.0"});
    _  ->
      true
  end,
  case orber_ifr:'Repository_lookup_id'(OE_IFR,"IDL:mtnm.tmforum.org/transmissionParameters:1.0") of
    [] ->
      exit({unregistered,"IDL:mtnm.tmforum.org/transmissionParameters:1.0"});
    _  ->
      true
  end,
  true.


%% Fetch top module reference, register if unregistered.
oe_get_top_module(OE_IFR, ID, Name, Version) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR, ID) of
    [] ->
      orber_ifr:'Repository_create_module'(OE_IFR, ID, Name, Version);
    Mod  ->
      Mod
   end.

%% Fetch module reference, register if unregistered.
oe_get_module(OE_IFR, OE_Parent, ID, Name, Version) ->
  case orber_ifr:'Repository_lookup_id'(OE_IFR, ID) of
    [] ->
      orber_ifr:'ModuleDef_create_module'(OE_Parent, ID, Name, Version);
    Mod  ->
      Mod
   end.



oe_unregister() ->
    OE_IFR = orber_ifr:find_repository(),

    oe_destroy(OE_IFR, "IDL:mtnm.tmforum.org/managedElement/ManagedElementIterator_I:1.0"),
    oe_destroy(OE_IFR, "IDL:mtnm.tmforum.org/managedElement/ManagedElementList_T:1.0"),
    oe_destroy(OE_IFR, "IDL:mtnm.tmforum.org/managedElement/ManagedElement_T:1.0"),
    oe_destroy(OE_IFR, "IDL:mtnm.tmforum.org/managedElement/CommunicationState_T:1.0"),
    oe_destroy_if_empty(OE_IFR, "IDL:mtnm.tmforum.org/managedElement:1.0"),
    ok.


oe_destroy_if_empty(OE_IFR,IFR_ID) ->
    case orber_ifr:'Repository_lookup_id'(OE_IFR, IFR_ID) of
	[] ->
	    ok;
	Ref ->
	    case orber_ifr:contents(Ref, 'dk_All', 'true') of
		[] ->
		    orber_ifr:destroy(Ref),
		    ok;
		_ ->
		    ok
	    end
    end.

oe_destroy(OE_IFR,IFR_ID) ->
    case orber_ifr:'Repository_lookup_id'(OE_IFR, IFR_ID) of
	[] ->
	    ok;
	Ref ->
	    orber_ifr:destroy(Ref),
	    ok
    end.



%% Idl file dependency list function
oe_dependency() ->

    {"d:/corba/idl/managedElement.idl",
     ["globaldefs.idl","transmissionParameters.idl"]}.

